buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
    }
}

version "1.2.0"
group = 'cbp.oss'

//apply plugin:"eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"
apply plugin: 'maven-publish'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'javax.servlet:javax.servlet-api:3.1.0'
    provided 'org.grails:grails-dependencies'
    provided 'org.grails.plugins:spring-security-core:3.1+'

    compile 'org.codehaus.groovy:groovy-all:2.4.3'
    compile 'com.ning:async-http-client:1.9.38'
    compile 'org.asynchttpclient:async-http-client:2.0.4'
    compile 'com.github.scribejava:scribejava-apis:2.7.3'

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

publishing {
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username nexusDeployUsername // valeur à mettre dans ~/.gradle/gradle.properties
                password nexusDeployPassword // valeur à mettre dans ~/.gradle/gradle.properties
            }
            url "https://wwwnexus.cbp-solutions.fr/nexus/content/repositories/${project.version ==~ /(?:\d+\.)*\d+/ ? 'releases' : 'snapshots' }"
        }
    }
}

assets {
    packagePlugin = true
}
